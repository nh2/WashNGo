-- © 2001-2003 Peter Thiemann
-- this file is generated -- do not edit
module WASH.HTML.HTMLMonadAttrs 
  (module WASH.HTML.HTMLMonadAttrs,module WASH.HTML.HTMLMonadBase)
  where
import Prelude hiding (id,span)
import WASH.HTML.HTMLMonadBase (attr, WithHTML)
-- end fixed prologue
abbr :: Monad m => String -> WithHTML x m ()
abbr =  attr "abbr"
accept :: Monad m => String -> WithHTML x m ()
accept =  attr "accept"
accept_charset :: Monad m => String -> WithHTML x m ()
accept_charset =  attr "accept-charset"
accesskey :: Monad m => String -> WithHTML x m ()
accesskey =  attr "accesskey"
action :: Monad m => String -> WithHTML x m ()
action =  attr "action"
align :: Monad m => String -> WithHTML x m ()
align =  attr "align"
alink :: Monad m => String -> WithHTML x m ()
alink =  attr "alink"
alt :: Monad m => String -> WithHTML x m ()
alt =  attr "alt"
archive :: Monad m => String -> WithHTML x m ()
archive =  attr "archive"
axis :: Monad m => String -> WithHTML x m ()
axis =  attr "axis"
background :: Monad m => String -> WithHTML x m ()
background =  attr "background"
bgcolor :: Monad m => String -> WithHTML x m ()
bgcolor =  attr "bgcolor"
border :: Monad m => String -> WithHTML x m ()
border =  attr "border"
cellpadding :: Monad m => String -> WithHTML x m ()
cellpadding =  attr "cellpadding"
cellspacing :: Monad m => String -> WithHTML x m ()
cellspacing =  attr "cellspacing"
char :: Monad m => String -> WithHTML x m ()
char =  attr "char"
charoff :: Monad m => String -> WithHTML x m ()
charoff =  attr "charoff"
charset :: Monad m => String -> WithHTML x m ()
charset =  attr "charset"
checked :: Monad m => String -> WithHTML x m ()
checked =  attr "checked"
cite :: Monad m => String -> WithHTML x m ()
cite =  attr "cite"
class' :: Monad m => String -> WithHTML x m ()
class' =  attr "class"
classid :: Monad m => String -> WithHTML x m ()
classid =  attr "classid"
clear :: Monad m => String -> WithHTML x m ()
clear =  attr "clear"
code :: Monad m => String -> WithHTML x m ()
code =  attr "code"
codebase :: Monad m => String -> WithHTML x m ()
codebase =  attr "codebase"
codetype :: Monad m => String -> WithHTML x m ()
codetype =  attr "codetype"
color :: Monad m => String -> WithHTML x m ()
color =  attr "color"
cols :: Monad m => String -> WithHTML x m ()
cols =  attr "cols"
colspan :: Monad m => String -> WithHTML x m ()
colspan =  attr "colspan"
compact :: Monad m => String -> WithHTML x m ()
compact =  attr "compact"
content :: Monad m => String -> WithHTML x m ()
content =  attr "content"
coords :: Monad m => String -> WithHTML x m ()
coords =  attr "coords"
data' :: Monad m => String -> WithHTML x m ()
data' =  attr "data"
datapagesize :: Monad m => String -> WithHTML x m ()
datapagesize =  attr "datapagesize"
datetime :: Monad m => String -> WithHTML x m ()
datetime =  attr "datetime"
declare :: Monad m => String -> WithHTML x m ()
declare =  attr "declare"
defer :: Monad m => String -> WithHTML x m ()
defer =  attr "defer"
dir :: Monad m => String -> WithHTML x m ()
dir =  attr "dir"
disabled :: Monad m => String -> WithHTML x m ()
disabled =  attr "disabled"
enctype :: Monad m => String -> WithHTML x m ()
enctype =  attr "enctype"
event :: Monad m => String -> WithHTML x m ()
event =  attr "event"
face :: Monad m => String -> WithHTML x m ()
face =  attr "face"
for :: Monad m => String -> WithHTML x m ()
for =  attr "for"
frame :: Monad m => String -> WithHTML x m ()
frame =  attr "frame"
frameborder :: Monad m => String -> WithHTML x m ()
frameborder =  attr "frameborder"
headers :: Monad m => String -> WithHTML x m ()
headers =  attr "headers"
height :: Monad m => String -> WithHTML x m ()
height =  attr "height"
href :: Monad m => String -> WithHTML x m ()
href =  attr "href"
hreflang :: Monad m => String -> WithHTML x m ()
hreflang =  attr "hreflang"
hspace :: Monad m => String -> WithHTML x m ()
hspace =  attr "hspace"
http_equiv :: Monad m => String -> WithHTML x m ()
http_equiv =  attr "http-equiv"
id :: Monad m => String -> WithHTML x m ()
id =  attr "id"
ismap :: Monad m => String -> WithHTML x m ()
ismap =  attr "ismap"
label :: Monad m => String -> WithHTML x m ()
label =  attr "label"
lang :: Monad m => String -> WithHTML x m ()
lang =  attr "lang"
language :: Monad m => String -> WithHTML x m ()
language =  attr "language"
link :: Monad m => String -> WithHTML x m ()
link =  attr "link"
longdesc :: Monad m => String -> WithHTML x m ()
longdesc =  attr "longdesc"
marginheight :: Monad m => String -> WithHTML x m ()
marginheight =  attr "marginheight"
marginwidth :: Monad m => String -> WithHTML x m ()
marginwidth =  attr "marginwidth"
maxlength :: Monad m => String -> WithHTML x m ()
maxlength =  attr "maxlength"
media :: Monad m => String -> WithHTML x m ()
media =  attr "media"
method :: Monad m => String -> WithHTML x m ()
method =  attr "method"
multiple :: Monad m => String -> WithHTML x m ()
multiple =  attr "multiple"
name :: Monad m => String -> WithHTML x m ()
name =  attr "name"
nohref :: Monad m => String -> WithHTML x m ()
nohref =  attr "nohref"
noresize :: Monad m => String -> WithHTML x m ()
noresize =  attr "noresize"
noshade :: Monad m => String -> WithHTML x m ()
noshade =  attr "noshade"
nowrap :: Monad m => String -> WithHTML x m ()
nowrap =  attr "nowrap"
object :: Monad m => String -> WithHTML x m ()
object =  attr "object"
onblur :: Monad m => String -> WithHTML x m ()
onblur =  attr "onblur"
onchange :: Monad m => String -> WithHTML x m ()
onchange =  attr "onchange"
onclick :: Monad m => String -> WithHTML x m ()
onclick =  attr "onclick"
ondblclick :: Monad m => String -> WithHTML x m ()
ondblclick =  attr "ondblclick"
onfocus :: Monad m => String -> WithHTML x m ()
onfocus =  attr "onfocus"
onkeydown :: Monad m => String -> WithHTML x m ()
onkeydown =  attr "onkeydown"
onkeypress :: Monad m => String -> WithHTML x m ()
onkeypress =  attr "onkeypress"
onkeyup :: Monad m => String -> WithHTML x m ()
onkeyup =  attr "onkeyup"
onload :: Monad m => String -> WithHTML x m ()
onload =  attr "onload"
onmousedown :: Monad m => String -> WithHTML x m ()
onmousedown =  attr "onmousedown"
onmousemove :: Monad m => String -> WithHTML x m ()
onmousemove =  attr "onmousemove"
onmouseout :: Monad m => String -> WithHTML x m ()
onmouseout =  attr "onmouseout"
onmouseover :: Monad m => String -> WithHTML x m ()
onmouseover =  attr "onmouseover"
onmouseup :: Monad m => String -> WithHTML x m ()
onmouseup =  attr "onmouseup"
onreset :: Monad m => String -> WithHTML x m ()
onreset =  attr "onreset"
onselect :: Monad m => String -> WithHTML x m ()
onselect =  attr "onselect"
onsubmit :: Monad m => String -> WithHTML x m ()
onsubmit =  attr "onsubmit"
onunload :: Monad m => String -> WithHTML x m ()
onunload =  attr "onunload"
profile :: Monad m => String -> WithHTML x m ()
profile =  attr "profile"
prompt :: Monad m => String -> WithHTML x m ()
prompt =  attr "prompt"
readonly :: Monad m => String -> WithHTML x m ()
readonly =  attr "readonly"
rel :: Monad m => String -> WithHTML x m ()
rel =  attr "rel"
rev :: Monad m => String -> WithHTML x m ()
rev =  attr "rev"
rows :: Monad m => String -> WithHTML x m ()
rows =  attr "rows"
rowspan :: Monad m => String -> WithHTML x m ()
rowspan =  attr "rowspan"
rules :: Monad m => String -> WithHTML x m ()
rules =  attr "rules"
scheme :: Monad m => String -> WithHTML x m ()
scheme =  attr "scheme"
scope :: Monad m => String -> WithHTML x m ()
scope =  attr "scope"
scrolling :: Monad m => String -> WithHTML x m ()
scrolling =  attr "scrolling"
selected :: Monad m => String -> WithHTML x m ()
selected =  attr "selected"
shape :: Monad m => String -> WithHTML x m ()
shape =  attr "shape"
size :: Monad m => String -> WithHTML x m ()
size =  attr "size"
span :: Monad m => String -> WithHTML x m ()
span =  attr "span"
src :: Monad m => String -> WithHTML x m ()
src =  attr "src"
standby :: Monad m => String -> WithHTML x m ()
standby =  attr "standby"
start :: Monad m => String -> WithHTML x m ()
start =  attr "start"
style :: Monad m => String -> WithHTML x m ()
style =  attr "style"
summary :: Monad m => String -> WithHTML x m ()
summary =  attr "summary"
tabindex :: Monad m => String -> WithHTML x m ()
tabindex =  attr "tabindex"
target :: Monad m => String -> WithHTML x m ()
target =  attr "target"
text :: Monad m => String -> WithHTML x m ()
text =  attr "text"
title :: Monad m => String -> WithHTML x m ()
title =  attr "title"
type' :: Monad m => String -> WithHTML x m ()
type' =  attr "type"
usemap :: Monad m => String -> WithHTML x m ()
usemap =  attr "usemap"
valign :: Monad m => String -> WithHTML x m ()
valign =  attr "valign"
value :: Monad m => String -> WithHTML x m ()
value =  attr "value"
valuetype :: Monad m => String -> WithHTML x m ()
valuetype =  attr "valuetype"
version :: Monad m => String -> WithHTML x m ()
version =  attr "version"
vlink :: Monad m => String -> WithHTML x m ()
vlink =  attr "vlink"
vspace :: Monad m => String -> WithHTML x m ()
vspace =  attr "vspace"
width :: Monad m => String -> WithHTML x m ()
width =  attr "width"
